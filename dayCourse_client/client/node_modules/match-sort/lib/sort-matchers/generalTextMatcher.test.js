"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var generalTextMatcher_1 = require("./generalTextMatcher");
var countries_1 = require("../test-data/countries");
describe('generalTextMatcher', function () {
    it('Sorts strings as expected', function () {
        var result = generalTextMatcher_1.generalTextMatcher.sort('nor', countries_1.iso3166countries);
        var expectedResultStart = [
            'Norway', // Starts with 'nor'
            'Norfolk Island', // Starts with 'nor'
            'North Macedonia', // Starts with 'nor'
            'Northern Mariana Islands (the)', // Starts with 'nor'
            'United Kingdom Of Great Britain And Northern Ireland (the)', // Has word starting with 'nor'
            'United States Minor Outlying Islands (the)', // Contains 'nor'
            'Andorra', // Has all characters in same order as 'nor'
            'Singapore', // Has all characters in same order as 'nor'
            'Jordan', // Has all charactars in 'nor'
            'Cameroon', // Has all characters in 'nor'
            'Honduras', // Has all characters in 'nor'
            'Montenegro', // Has all characters in 'nor'
        ];
        expect(result.slice(0, expectedResultStart.length)).toEqual(expectedResultStart);
    });
    it('Sorts acronyms as expected', function () {
        var result = generalTextMatcher_1.generalTextMatcher.sort('USA', countries_1.iso3166countries);
        var expectedResultStart = [
            'United States Of America (the)',
            'Austria',
            'Tunisia',
        ];
        expect(result.slice(0, expectedResultStart.length)).toEqual(expectedResultStart);
    });
    it('Ignores accents and special symbols', function () {
        var result = generalTextMatcher_1.generalTextMatcher.sort('cote divoire', countries_1.iso3166countries);
        var expectedResultStart = ['CÃ´te d\'Ivoire'];
        expect(result.slice(0, expectedResultStart.length)).toEqual(expectedResultStart);
    });
    it('Hits when characters are in the wrong order', function () {
        var result = generalTextMatcher_1.generalTextMatcher.sort('nowray', countries_1.iso3166countries);
        var expectedResultStart = ['Norway'];
        expect(result.slice(0, expectedResultStart.length)).toEqual(expectedResultStart);
    });
    it('Returns the array unchanged when no search is given', function () {
        var result = generalTextMatcher_1.generalTextMatcher.sort('', countries_1.iso3166countries);
        expect(result).toEqual(countries_1.iso3166countries);
    });
});
