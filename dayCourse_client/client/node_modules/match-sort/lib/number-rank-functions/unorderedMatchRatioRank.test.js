"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var numberRank_1 = require("../utils/numberRank");
var unorderedMatchRatioRank_1 = require("./unorderedMatchRatioRank");
describe('unorderedMatchRatioRank', function () {
    it('Returns 0 when the match is exact', function () {
        expect((0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)('abc')('cba')).toBe(0);
    });
    it('Returns a better rank if the match is exact than if the wordAcronym match is exact', function () {
        var search = 'abc';
        var exactMatch = 'cba';
        var acronymMatch = 'cd bd ad';
        var exactRank = (0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)(search)(exactMatch);
        var acronymRank = (0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)(search)(acronymMatch);
        expect((0, numberRank_1.numberRank)(exactRank)).toBeLessThan((0, numberRank_1.numberRank)(acronymRank));
    });
    it('Returns a better rank for a value of which the wordAcronym matches best and better than a value of which the full match matches best', function () {
        var search = 'abc';
        var acronymMatch = 'dd cd bd ad';
        var fullMatch = 'edcba';
        var acronymRank = (0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)(search)(acronymMatch);
        var fullMatchRank = (0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)(search)(fullMatch);
        expect((0, numberRank_1.numberRank)(acronymRank)).toBeLessThan((0, numberRank_1.numberRank)(fullMatchRank));
    });
    it('Returns a better rank for a value of which the full match matches best and better than a value of which the wordAcronym matches best', function () {
        var search = 'abc';
        var acronymMatch = 'ed dd cd bd ad';
        var fullMatch = 'dcba';
        var acronymRank = (0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)(search)(acronymMatch);
        var fullMatchRank = (0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)(search)(fullMatch);
        expect((0, numberRank_1.numberRank)(fullMatchRank)).toBeLessThan((0, numberRank_1.numberRank)(acronymRank));
    });
    test('General ranking', function () {
        var us = 'us';
        var usa = 'usa';
        var usoa = 'usoa';
        var unitedStates = 'united states';
        var theUnitedStates = 'the united states';
        var unitedStatesAmerica = 'united states america';
        var unitedStatesOfAmerica = 'united states of america';
        var theUnitedStatesOfAmerica = 'the united states of america';
        var unitedStatesWithDash = 'united-states';
        var unitedStatesAmericaWithDash = 'united-states-america';
        var unitedStatesOfAmericaWithDash = 'united-states-of-america';
        var theUnitedStatesOfAmericaWithDash = 'the-united-states-of-america';
        var values = [
            theUnitedStates,
            theUnitedStatesOfAmerica,
            theUnitedStatesOfAmericaWithDash,
            unitedStates,
            unitedStatesAmerica,
            unitedStatesAmericaWithDash,
            unitedStatesOfAmerica,
            unitedStatesOfAmericaWithDash,
            unitedStatesWithDash,
            us,
            usa,
            usoa,
        ];
        var search = 'su';
        var rankFunction = (0, unorderedMatchRatioRank_1.unorderedMatchRatioRank)(search);
        var sorted = values.sort(function (a, b) {
            var rankA = rankFunction(a);
            var rankB = rankFunction(b);
            return (0, numberRank_1.numberRank)(rankA) - (0, numberRank_1.numberRank)(rankB);
        });
        var expectedResult = [
            us,
            unitedStatesWithDash,
            unitedStates,
            usa,
            unitedStatesAmericaWithDash,
            theUnitedStates,
            unitedStatesAmerica,
            usoa,
            unitedStatesOfAmericaWithDash,
            unitedStatesOfAmerica,
            theUnitedStatesOfAmericaWithDash,
            theUnitedStatesOfAmerica,
        ];
        expect(sorted).toEqual(expectedResult);
    });
});
