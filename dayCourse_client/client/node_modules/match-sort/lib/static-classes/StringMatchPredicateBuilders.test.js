"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StringMatchPredicateBuilders_1 = require("./StringMatchPredicateBuilders");
var StringMatchPredicates_1 = require("./StringMatchPredicates");
describe('StringMatchPredicateBuilders', function () {
    var equals = StringMatchPredicates_1.StringMatchPredicates.equals;
    test('someWord', function () {
        var predicate = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.someWord(equals);
        expect(predicate('foo')('foo bar')).toBe(true);
        expect(predicate('foo')('bar foo')).toBe(true);
        expect(predicate('foo')('bar')).toBe(false);
        expect(predicate('foo')('foo-bar')).toBe(false);
    });
    test('somePart', function () {
        var predicate = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.somePart(equals);
        expect(predicate('foo')('foo-bar')).toBe(true);
        expect(predicate('foo')('bar-foo')).toBe(true);
        expect(predicate('foo')('bar')).toBe(false);
        expect(predicate('foo')('foobar')).toBe(false);
    });
    test('acronym', function () {
        var predicate = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.wordAcronym(equals);
        expect(predicate('fb')('foo bar')).toBe(true);
        expect(predicate('fb')('bar foo')).toBe(false);
        expect(predicate('fb')('foo-bar')).toBe(false);
    });
    test('fullAcronym', function () {
        var predicate = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.fullAcronym(equals);
        expect(predicate('fb')('foo bar')).toBe(true);
        expect(predicate('fb')('foo-bar')).toBe(true);
        expect(predicate('fb')('bar foo')).toBe(false);
    });
    test('firstWord', function () {
        var predicate = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.firstWord(equals);
        expect(predicate('foo')('foo bar')).toBe(true);
        expect(predicate('foo')('bar foo')).toBe(false);
        expect(predicate('foo')('foo-bar')).toBe(false);
    });
    test('firstPart', function () {
        var predicate = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.firstPart(equals);
        expect(predicate('foo')('foo-bar')).toBe(true);
        expect(predicate('foo')('foo bar')).toBe(true);
        expect(predicate('foo')('bar-foo')).toBe(false);
        expect(predicate('foo')('foobar')).toBe(false);
    });
});
