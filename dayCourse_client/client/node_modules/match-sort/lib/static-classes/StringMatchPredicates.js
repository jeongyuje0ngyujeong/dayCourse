"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StringMatchPredicates = void 0;
var StringMatchPredicateBuilders_1 = require("./StringMatchPredicateBuilders");
var StringMatchPredicates = /** @class */ (function () {
    function StringMatchPredicates() {
    }
    var _a;
    _a = StringMatchPredicates;
    StringMatchPredicates.containsAllCharacters = function (search) { return function (value) {
        if (search.length > value.length)
            return false;
        var searchCharacters = search.split('');
        var valueCharacters = value.split('');
        for (var _i = 0, searchCharacters_1 = searchCharacters; _i < searchCharacters_1.length; _i++) {
            var char = searchCharacters_1[_i];
            var index = valueCharacters.indexOf(char);
            if (index === -1)
                return false;
            valueCharacters.splice(index, 1);
        }
        return true;
    }; };
    StringMatchPredicates.containsAllCharactersInOrder = function (search) { return function (value) {
        if (!search)
            return true;
        var searchIndex = 0;
        for (var i = 0; i < value.length; i++) {
            if (value[i] === search[searchIndex]) {
                searchIndex++;
                if (searchIndex === search.length)
                    return true;
            }
        }
        return false;
    }; };
    StringMatchPredicates.contains = function (search) { return function (text) {
        if (!search)
            return true;
        return text.includes(search);
    }; };
    StringMatchPredicates.equals = function (search) { return function (value) { return value === search; }; };
    StringMatchPredicates.startsWith = function (str) { return function (value) { return value.startsWith(str); }; };
    StringMatchPredicates.hasAcronym = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.acronym(_a.equals);
    StringMatchPredicates.hasPart = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.somePart(_a.equals);
    StringMatchPredicates.hasWord = StringMatchPredicateBuilders_1.StringMatchPredicateBuilders.someWord(_a.equals);
    return StringMatchPredicates;
}());
exports.StringMatchPredicates = StringMatchPredicates;
