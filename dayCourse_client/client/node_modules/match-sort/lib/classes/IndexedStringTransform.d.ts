import { StringTransformationFunction } from '../types/StringTransformationFunction';
import { MatchRankFunction } from '../types/MatchRankFunction';
type FunctionToResultMap = Map<StringTransformationFunction, string>;
export declare class IndexedStringTransform {
    private transforms;
    constructor();
    get(input: string): FunctionToResultMap | undefined;
    getResult(input: string, transformation: StringTransformationFunction): string | undefined;
    run(input: string, transformation: StringTransformationFunction): string;
    runMultiple(input: string, transformations: StringTransformationFunction[]): string;
    runOnProperty<P extends string, O extends {
        [key in P]: string;
    }>(object: O, property: P, transformation: StringTransformationFunction): string;
    runMultipleOnProperty<P extends string, O extends {
        [key in P]: string;
    }>(object: O, property: P, transformations: StringTransformationFunction[]): string;
    matchRankWithTransformations(matchRankFunction: MatchRankFunction<string>, transformations: StringTransformationFunction[]): MatchRankFunction<string>;
}
export {};
