"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StringTransform_1 = require("../static-classes/StringTransform");
var StringMatchSort_1 = require("./StringMatchSort");
var replaceGreekLowercaseLetters = function (value) { return value
    .replace('α', 'a')
    .replace('β', 'b')
    .replace('γ', 'g')
    .replace('δ', 'd')
    .replace('ε', 'e')
    .replace('ζ', 'z')
    .replace('η', 'i')
    .replace('θ', 'th')
    .replace('ι', 'i')
    .replace('κ', 'k')
    .replace('λ', 'l')
    .replace('μ', 'm')
    .replace('ν', 'n')
    .replace('ξ', 'ks')
    .replace('ο', 'o')
    .replace('π', 'p')
    .replace('ρ', 'r')
    .replace('σ', 's')
    .replace('ς', 's')
    .replace('τ', 't')
    .replace('υ', 'y')
    .replace('φ', 'f')
    .replace('χ', 'ch')
    .replace('ψ', 'ps')
    .replace('ω', 'o'); };
describe('StringMatchSort', function () {
    var exactMatch = function (search) { return function (value) { return search === value; }; };
    var exactMatchSorter = StringMatchSort_1.StringMatchSort.from(exactMatch);
    var array = ['ABC', 'abc', 'DEF', 'def', 'GHI', 'ghi'];
    describe('makeSorter', function () {
        it('Creates a sorter object that applies the given match function', function () {
            var sorter = exactMatchSorter.makeSorter('def');
            expect(sorter.sort(array)).toEqual(['def', 'ABC', 'abc', 'DEF', 'GHI', 'ghi']);
        });
    });
    describe('sort', function () {
        it('Sorts the items using the match function', function () {
            var result = exactMatchSorter.sort('def', array);
            expect(result).toEqual(['def', 'ABC', 'abc', 'DEF', 'GHI', 'ghi']);
        });
    });
    test('transformations', function () {
        var array = function () { return ['ABC', 'abc', 'ΔΕΦ', 'DEF', 'δεφ', 'def', 'GHI', 'ghi']; };
        var sorter = StringMatchSort_1.StringMatchSort.from(exactMatch, [StringTransform_1.StringTransform.lowercase, replaceGreekLowercaseLetters]);
        var greekResult = sorter.sort('δεφ', array());
        var latinResult = sorter.sort('def', array());
        var greekUpperResult = sorter.sort('ΔΕΦ', array());
        var latinUpperResult = sorter.sort('DEF', array());
        expect(greekResult).toEqual(['δεφ', 'ΔΕΦ', 'DEF', 'def', 'ABC', 'abc', 'GHI', 'ghi']);
        expect(latinResult).toEqual(['def', 'DEF', 'ΔΕΦ', 'δεφ', 'ABC', 'abc', 'GHI', 'ghi']);
        expect(greekUpperResult).toEqual(['ΔΕΦ', 'δεφ', 'DEF', 'def', 'ABC', 'abc', 'GHI', 'ghi']);
        expect(latinUpperResult).toEqual(['DEF', 'def', 'ΔΕΦ', 'δεφ', 'ABC', 'abc', 'GHI', 'ghi']);
    });
    it('Applies default transformations if no transformations are given', function () {
        var array = function () { return ['ABC', 'abc', 'ΔΕΦ', 'DEF', 'δεφ', 'def', 'GHI', 'ghi']; };
        var sorter = new StringMatchSort_1.StringMatchSort([StringTransform_1.StringTransform.lowercase, replaceGreekLowercaseLetters]);
        sorter.chain(exactMatch);
        var greekResult = sorter.sort('δεφ', array());
        var latinResult = sorter.sort('def', array());
        expect(greekResult).toEqual(['δεφ', 'ΔΕΦ', 'DEF', 'def', 'ABC', 'abc', 'GHI', 'ghi']);
        expect(latinResult).toEqual(['def', 'DEF', 'ΔΕΦ', 'δεφ', 'ABC', 'abc', 'GHI', 'ghi']);
    });
    describe('onProperty', function () {
        var array = function () { return [
            { id: '1', name: 'ABC' },
            { id: '2', name: 'abc' },
            { id: '3', name: 'DEF' },
            { id: '4', name: 'def' },
            { id: '5', name: 'GHI' },
            { id: '6', name: 'ghi' },
        ]; };
        it('Sorts the items using the match function', function () {
            var result = exactMatchSorter.onProperty('name').sort('def', array());
            expect(result).toEqual([
                { id: '4', name: 'def' },
                { id: '1', name: 'ABC' },
                { id: '2', name: 'abc' },
                { id: '3', name: 'DEF' },
                { id: '5', name: 'GHI' },
                { id: '6', name: 'ghi' },
            ]);
        });
        it('Applies transformations', function () {
            var sorter = StringMatchSort_1.StringMatchSort.from(exactMatch, [StringTransform_1.StringTransform.lowercase]);
            var result = sorter.onProperty('name').sort('def', array());
            expect(result).toEqual([
                { id: '4', name: 'def' },
                { id: '3', name: 'DEF' },
                { id: '1', name: 'ABC' },
                { id: '2', name: 'abc' },
                { id: '5', name: 'GHI' },
                { id: '6', name: 'ghi' },
            ]);
        });
    });
});
