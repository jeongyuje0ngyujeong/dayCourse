"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RankSort = void 0;
var numberRank_1 = require("../utils/numberRank");
var RankSort = /** @class */ (function () {
    function RankSort(rankFunction) {
        if (!rankFunction)
            this.rankFunctionList = [];
        else {
            var rankFunctionList = Array.isArray(rankFunction) ? rankFunction : [rankFunction];
            this.rankFunctionList = rankFunctionList.map(function (rankFunction) { return function (value) { return (0, numberRank_1.numberRank)(rankFunction(value)); }; });
        }
    }
    RankSort.prototype.chain = function (rankFunction) {
        this.rankFunctionList.push(function (value) { return (0, numberRank_1.numberRank)(rankFunction(value)); });
        return this;
    };
    RankSort.prototype.sort = function (array) {
        var _this = this;
        var rankMap = new Map();
        array.forEach(function (value) {
            rankMap.set(value, _this.rankFunction(value)); // This way, the rank function is only run once per value.
        });
        return array.sort(function (a, b) { return rankMap.get(a) - rankMap.get(b); });
    };
    RankSort.prototype.rankFunction = function (value) {
        var rank = 0;
        for (var _i = 0, _a = this.rankFunctionList; _i < _a.length; _i++) {
            var rankFunction = _a[_i];
            rank += rankFunction(value);
            if (rank === 0)
                break;
        }
        return rank;
    };
    return RankSort;
}());
exports.RankSort = RankSort;
