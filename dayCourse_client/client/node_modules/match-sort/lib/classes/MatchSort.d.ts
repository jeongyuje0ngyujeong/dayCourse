import { MatchRankFunction } from '../types/MatchRankFunction';
import { RankSort } from './RankSort';
import { BooleanMatchFunction } from '../types/BooleanMatchFunction';
export declare class MatchSort<T> {
    private matchRankFunctionList;
    private filter;
    private searchListIndex;
    constructor();
    private searchFunction;
    makeSorter(search: string): RankSort<T>;
    private makeRankFunctions;
    chain(rankFunction: MatchRankFunction<T>): MatchSort<T>;
    setMatchRankFunctionList(matchRankFunctionList: MatchRankFunction<T>[]): MatchSort<T>;
    setFilter(filter: BooleanMatchFunction<T>): MatchSort<T>;
    sort(search: string, values: T[]): T[];
    onProperty<P extends string, O extends {
        [key in P]: T;
    }>(property: P): MatchSort<O>;
    onList(): MatchSort<T[]>;
}
