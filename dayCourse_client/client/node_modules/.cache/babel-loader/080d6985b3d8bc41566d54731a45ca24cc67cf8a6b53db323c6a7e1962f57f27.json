{"ast":null,"code":"var _jsxFileName = \"/Users/jeongyuje0ngyujeong/git_hub/krafton_jungle/dayCourse/dayCourse_client/client/src/pages/Album/PlanDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { uploadImage, fetchImage } from '../../AlbumApi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n_c = Container;\nconst UploadContainer = styled.div`\n    margin-top: 20px;\n`;\n_c2 = UploadContainer;\nconst ImageContainer = styled.div`\n    margin-top: 20px;\n    display: flex;\n    flex-wrap: wrap;\n`;\n_c3 = ImageContainer;\nconst Image = styled.img`\n    width: 100px;\n    height: 100px;\n    margin: 5px;\n    border-radius: 5px;\n`;\n_c4 = Image;\nconst PlanDetail = () => {\n  _s();\n  const {\n    planId\n  } = useParams(); // URL에서 플랜 ID 가져오기\n\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [userId, setUserId] = useState(\"1\");\n  const [imageUrls, setImageUrls] = useState([]);\n\n  // 이미지 목록 가져오기\n  const fetchImageUrls = useCallback(async () => {\n    try {\n      const data = await fetchImage(userId);\n      setImageUrls(data);\n    } catch (error) {\n      console.error(\"이미지 목록 가져오기 에러:\", error);\n    }\n  }, [userId]); // userId를 의존성으로 추가\n\n  const onFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (!selectedFile) {\n      alert('파일을 선택해줘');\n      return;\n    }\n    try {\n      const response = await uploadImage(userId, selectedFile);\n      console.log('서버 응답:', response);\n      fetchImageUrls(null);\n    } catch (error) {\n      console.error('업로드 실패:', error);\n    }\n  };\n  useEffect(() => {\n    if (userId) {\n      fetchImageUrls(); // 사용자 ID가 설정되면 이미지 목록 가져오기\n    }\n  }, [userId, fetchImageUrls]); // fetchImageUrls를 의존성으로 추가\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD50C\\uB79C ID: \", planId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UploadContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC0AC\\uC6A9\\uC790 ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userId,\n            onChange: e => setUserId(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\uC774\\uBBF8\\uC9C0 \\uC120\\uD0DD:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: onFileChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uC5C5\\uB85C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uC0AC\\uC9C4 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: imageUrls.length > 0 ? imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(Image, {\n        src: url,\n        alt: `S3 이미지 ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC774\\uBBF8\\uC9C0 \\uD30C\\uC77C \\uC5C6\\uC74C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(PlanDetail, \"6sekS6iz7I4n+UY3BDfbeZOkwMg=\", false, function () {\n  return [useParams];\n});\n_c5 = PlanDetail;\nexport default PlanDetail;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"UploadContainer\");\n$RefreshReg$(_c3, \"ImageContainer\");\n$RefreshReg$(_c4, \"Image\");\n$RefreshReg$(_c5, \"PlanDetail\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","styled","useParams","uploadImage","fetchImage","jsxDEV","_jsxDEV","Container","div","_c","UploadContainer","_c2","ImageContainer","_c3","Image","img","_c4","PlanDetail","_s","planId","selectedFile","setSelectedFile","userId","setUserId","imageUrls","setImageUrls","fetchImageUrls","data","error","console","onFileChange","event","target","files","onSubmit","preventDefault","alert","response","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","required","length","map","url","index","src","alt","_c5","$RefreshReg$"],"sources":["/Users/jeongyuje0ngyujeong/git_hub/krafton_jungle/dayCourse/dayCourse_client/client/src/pages/Album/PlanDetail.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { uploadImage, fetchImage } from '../../AlbumApi.js';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst UploadContainer = styled.div`\n    margin-top: 20px;\n`;\n\nconst ImageContainer = styled.div`\n    margin-top: 20px;\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst Image = styled.img`\n    width: 100px;\n    height: 100px;\n    margin: 5px;\n    border-radius: 5px;\n`;\n\nconst PlanDetail = () => {\n    const { planId } = useParams(); // URL에서 플랜 ID 가져오기\n\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [userId, setUserId] = useState(\"1\")\n    const [imageUrls, setImageUrls] = useState([]);\n\n\n    // 이미지 목록 가져오기\n    const fetchImageUrls = useCallback(async () => {\n        try {\n            const data = await fetchImage(userId);\n            setImageUrls(data);\n        } catch (error) {\n            console.error(\"이미지 목록 가져오기 에러:\", error);\n        }\n    }, [userId]); // userId를 의존성으로 추가\n\n\n    const onFileChange = (event) => {\n        setSelectedFile(event.target.files[0]);\n    }\n\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!selectedFile) {\n            alert('파일을 선택해줘');\n            return;\n        }\n\n        try {\n            const response = await uploadImage(userId, selectedFile);\n            console.log('서버 응답:', response);\n            fetchImageUrls(null);\n        } catch(error) {\n            console.error('업로드 실패:', error);\n        }\n    };\n    useEffect(() => {\n        if (userId) {\n            fetchImageUrls(); // 사용자 ID가 설정되면 이미지 목록 가져오기\n        }\n    }, [userId, fetchImageUrls]); // fetchImageUrls를 의존성으로 추가\n\n\n    return (\n        <Container>\n            <h2>플랜 ID: {planId}</h2>\n            <UploadContainer>\n                <form onSubmit={onSubmit}>\n                    <div>\n                        <label>사용자 ID:</label>\n                        <input  \n                            type=\"text\"\n                            value={userId}\n                            onChange={(e)=> setUserId(e.target.value)}\n                            required\n                        />\n                    </div>\n                    <div>\n                        <label>이미지 선택:</label>\n                        <input type=\"file\" onChange={onFileChange} required/>\n                    </div>\n                    <button type=\"submit\">업로드</button>\n                </form>\n            </UploadContainer>\n\n            <h3>사진 목록</h3>\n            <ImageContainer>\n                {imageUrls.length > 0 ? (\n                    imageUrls.map((url, index) => (\n                        <Image key={index} src={url} alt = {`S3 이미지 ${index}`} />\n                    ))\n                ) : (\n                    <p>이미지 파일 없음</p>\n                \n                )}\n            </ImageContainer>\n        </Container>\n    )\n};\n\nexport default PlanDetail;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}