{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://192.168.1.80:5000';\n// const BASE_URL = 'http://localhost:3000'; // 변경된 포트 사용\n\n//모든 플랜 가져오기\nexport async function getPlan() {\n  try {\n    const response = await fetch(`${BASE_URL}/home/plans/recent?userId=1`); // 서버에서 모든 플랜 요청\n    if (!response.ok) {\n      throw new Error('플랜 가져오기 실패');\n    }\n    const plans = await response.json();\n    return plans;\n  } catch (error) {\n    console.error('Error fetching plans:', error);\n    throw error;\n  }\n}\n\n//이미지 업로드\nexport const uploadImage = async (userId, selectedFile) => {\n  const formData = new FormData();\n  formData.append(\"userId\", userId); // 사용자 ID 추가\n  formData.append(\"image\", selectedFile); // 이미지 파일 추가\n\n  try {\n    const response = await axios.post(`${BASE_URL}/images?userId=1`, formData, {\n      hearders: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"업로드 실패:\", error);\n    throw error;\n  }\n};\n\n// 이미지 가져오기\nexport const fetchImage = async userId => {\n  try {\n    const response = await axios.get(`${BASE_URL}/images`, {\n      params: {\n        name: userId\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching images:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","getPlan","response","fetch","ok","Error","plans","json","error","console","uploadImage","userId","selectedFile","formData","FormData","append","post","hearders","data","fetchImage","get","params","name"],"sources":["/Users/jeongyuje0ngyujeong/git_hub/krafton_jungle/dayCourse/dayCourse_client/client/src/AlbumApi.js"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'http://192.168.1.80:5000'; \n// const BASE_URL = 'http://localhost:3000'; // 변경된 포트 사용\n\n\n//모든 플랜 가져오기\nexport async function getPlan() {\n    try {\n        const response = await fetch(`${BASE_URL}/home/plans/recent?userId=1`); // 서버에서 모든 플랜 요청\n        if (!response.ok) {\n            throw new Error('플랜 가져오기 실패');\n        }\n        const plans = await response.json();\n        return plans;\n    } catch (error) {\n        console.error('Error fetching plans:', error);\n        throw error;\n    }\n}\n\n\n//이미지 업로드\nexport const uploadImage = async (userId, selectedFile) => {\n    const formData= new FormData();\n    formData.append(\"userId\", userId);      // 사용자 ID 추가\n    formData.append(\"image\", selectedFile); // 이미지 파일 추가\n\n\n    try {\n        const response = await axios.post(`${BASE_URL}/images?userId=1`, formData, {\n            hearders: {\n                \"Content-Type\" : \"multipart/form-data\",\n            },\n        });\n        return response.data;\n    } catch (error) {\n        console.error(\"업로드 실패:\", error);\n        throw error;\n    }\n};\n\n// 이미지 가져오기\nexport const fetchImage = async(userId) => {\n    try {\n        const response = await axios.get(`${BASE_URL}/images`, {\n            params: { name : userId},\n        });\n        return response.data;\n    } catch (error)  {\n        console.error(\"Error fetching images:\", error);\n        throw error;\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAG,0BAA0B;AAC3C;;AAGA;AACA,OAAO,eAAeC,OAAOA,CAAA,EAAG;EAC5B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,6BAA6B,CAAC,CAAC,CAAC;IACxE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,YAAY,CAAC;IACjC;IACA,MAAMC,KAAK,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,OAAOD,KAAK;EAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACf;AACJ;;AAGA;AACA,OAAO,MAAME,WAAW,GAAG,MAAAA,CAAOC,MAAM,EAAEC,YAAY,KAAK;EACvD,MAAMC,QAAQ,GAAE,IAAIC,QAAQ,CAAC,CAAC;EAC9BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,MAAM,CAAC,CAAC,CAAM;EACxCE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,YAAY,CAAC,CAAC,CAAC;;EAGxC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACiB,IAAI,CAAC,GAAGhB,QAAQ,kBAAkB,EAAEa,QAAQ,EAAE;MACvEI,QAAQ,EAAE;QACN,cAAc,EAAG;MACrB;IACJ,CAAC,CAAC;IACF,OAAOf,QAAQ,CAACgB,IAAI;EACxB,CAAC,CAAC,OAAOV,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;IAC/B,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMW,UAAU,GAAG,MAAMR,MAAM,IAAK;EACvC,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACqB,GAAG,CAAC,GAAGpB,QAAQ,SAAS,EAAE;MACnDqB,MAAM,EAAE;QAAEC,IAAI,EAAGX;MAAM;IAC3B,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACgB,IAAI;EACxB,CAAC,CAAC,OAAOV,KAAK,EAAG;IACbC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}