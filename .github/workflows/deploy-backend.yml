name: deploy node api

on:
  push:
    branches:
      - dayCourseServer

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
        # 1. Checkout the code
        - name: Checkout code
          uses: actions/checkout@v4
        
        # 2. Set up Node.js
        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '22.x'
        
        # 3. Check Node version
        - name: Check Node v
          run: node -v

        # 4. Stash local changes (only if there are changes)
        - name: Stash local changes if any
          id: stash
          run: |
            git diff-index --quiet HEAD || git stash
            echo "::set-output name=CHANGES_STASHED::$(git stash list | wc -l)"

        # 5. Pull latest changes and merge
        - name: Pull and merge
          run: git pull origin dayCourseServer

        # 6. Apply stashed changes (only if there were stashed changes)
        - name: Apply stashed changes if any
          if: steps.stash.outputs.CHANGES_STASHED != '0'
          run: git stash pop

        # 7. Cache node_modules to speed up subsequent builds
        - name: Cache node_modules
          uses: actions/cache@v2
          with:
            path: dayCourse_server/node_modules  # 변경된 캐시 경로
            key: ${{ runner.os }}-dayCourse_server-node_modules-${{ hashFiles('dayCourse_server/package-lock.json') }}  # 정확한 경로로 키 설정
            restore-keys: |
              ${{ runner.os }}-dayCourse_server-node_modules-

        # 8. Install dependencies
        - name: Install dependencies # 의존성 다운
          run: |
            cd dayCourse_server  # server 폴더로 이동
            npm install
        
        # 9. Deploy to EC2
        - name: Deploy to EC2
          env:
            SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
            REMOTE_HOST: ${{ secrets.EC2_HOST }}
            REMOTE_USER: ubuntu
            APP_DIR: '/home/ubuntu/dayCourse_server'
          run: |
            eval "$(ssh-agent -s)"  # SSH 에이전트 시작
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
              if [ ! -d \"$APP_DIR\" ]; then
                git clone -b dayCourseServer https://github.com/jeongyuje0ngyujeong/dayCourse.git $APP_DIR;
              else
                cd $APP_DIR && git pull origin dayCourseServer;
              fi &&
              cd $APP_DIR &&  # 여기서 디렉토리 중복 문제 해결
              npm install &&
              pm2 start /home/ubuntu/dayCourse_server/app.js --name daycourse -f || pm2 restart daycourse -f"

