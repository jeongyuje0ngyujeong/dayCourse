name: deploy node api

on:
  push:
    branches:
      - dayCourseServer

jobs:
  deploy:
    runs-on: ubuntu-24.04

    steps:
        # 1. Checkout the code
        - name: Checkout code
          uses: actions/checkout@v4

        # # 2. env 파일 만들기#
        # - name: Create .env file from Secret
        #   run: |
        #     echo "${{ secrets.ENV_FILE }}" > .env
  
        # - name: Upload .env file to Server
        #   uses: appleboy/scp-action@v0.1.1
        #   with:
        #     host: ${{ secrets.EC2_HOST }}
        #     username: ubuntu
        #     key: ${{ secrets.EC2_SSH_KEY }}
        #     source: ".env"
        #     target: "/home/ubuntu/dayCourse_server/dayCourse_server"
  
        # 3. node 다운
        - name: install node
          env:
            SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
            REMOTE_HOST: ${{ secrets.EC2_HOST }}
            REMOTE_USER: ubuntu
          run: |
            eval "$(ssh-agent -s)"
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
              if ! command -v npm &> /dev/null; then
                echo 'install Node.js 20.x' &&
                curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash - &&
                sudo apt-get install -y nodejs &&
                sudo npm install -g n &&
                sudo n 22.0.0
              fi"

        # 4. 배포
        - name: ssh + git pull + npm install + pm2 start
          env:
            SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
            REMOTE_HOST: ${{ secrets.EC2_HOST }}
            REMOTE_USER: ubuntu          
            APP_DIR: '/home/ubuntu/dayCourse_server'  
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
            GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
            TMAP_APP_KEY: ${{ secrets.TMAP_APP_KEY }}        
          run: |
            eval "$(ssh-agent -s)"
            echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
            ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST "
              if [ -d \"$APP_DIR/.git\" ]; then
                echo 'exists + pull'
                cd $APP_DIR &&
                git config pull.rebase true &&
                git reset --hard origin/dayCourseServer &&
                git pull origin dayCourseServer;
              else
                echo 'not exist + clone'
                git clone -b dayCourseServer https://github.com/jeongyuje0ngyujeong/dayCourse.git $APP_DIR;
              fi &&
              
              cd $APP_DIR/dayCourse_server && 
              
              rm -rf node_modules
              rm package-lock.json

              npm install &&
              if ! command -v pm2 &> /dev/null; then
                echo 'pm2 install' &&
                sudo npm install -g pm2;
              fi &&
              
              sudo setcap 'cap_net_bind_service=+ep' $(which node) 
              (pm2 delete all || true) && JWT_SECRET=$JWT_SECRET GOOGLE_API_KEY=$GOOGLE_API_KEY TMAP_APP_KEY=$TMAP_APP_KEY pm2 start app.js"
